<beast version='2.0'
       namespace='beast.core
                 :beast.core.util
                 :beast.core.parameter
                 :beast.evolution.tree.coalescent
                 :beast.util
                 :bacter
                 :bacter.model:bacter.model.unrestricted
                 :bacter.operators:bacter.operators.unrestricted
                 :bacter.util'>

  
  <!--input spec='SimulatedACG' id='acg'
         rho="0.0005" delta="50.0" sequenceLength="10000" nTaxa="2">
      <populationModel spec='ConstantPopulation' popSize="1.0" id="popFunc"/>
      <clonalFrame spec='TreeParser' newick="(1:0.799841931948889,2:0.799841931948889):0.0;"/>
  </input-->

  <input spec='ConversionGraph' id='acg' sequenceLength="10000"
         fromString="(0:0.799841931948889,1:0.799841931948889):0.0;"/>

  <input spec='ACGCoalescent' id="acgPrior">
      <rho spec='RealParameter' value="0.0005" id="rho" estimate="false"/>
      <delta spec='RealParameter' value="50.0" id="delta" estimate="false"/>
      <acg idref="acg"/>
      <populationModel idref="popFunc"/>
  </input>
  
  <run spec="MCMC" id="mcmc" chainLength="100000000">
    <state>
      <stateNode idref='acg'/>
    </state>
    
    <distribution spec="CompoundDistribution" id="posterior">
      <distribution idref="acgPrior"/>
    </distribution>

    <operator id="addRemove" spec="AddRemoveConversion" weight="1.0">
        <acg idref="acg"/>
        <rho idref="rho"/>
        <delta idref="delta"/>
        <populationModel spec='ConstantPopulation' popSize="1.0" id="popFunc"/>
    </operator>

    <logger logEvery="1000">
      <model idref='posterior'/>
      <log idref="posterior"/>
      <log spec="ConversionGraphStatsLogger" acg="@acg"/>
    </logger>
    
    <logger logEvery="1000" fileName="$(filebase).trees" mode="tree">
       <log idref="acg"/>
     </logger>
     
     <logger logEvery="1000" fileName="$(filebase).cf" mode="tree">
         <log spec="ClonalFrameLogger" acg="@acg"/>
     </logger>
     
     <logger logEvery="1000" fileName="$(filebase).converted">
         <log idref="posterior"/>
         <log spec="ConvertedRegionLogger" acg="@acg"/>
     </logger>
     
     <logger logEvery="1000" fileName="$(filebase).stats">
         <log idref="posterior"/>
         <log spec="ConversionGraphStatsLogger" acg="@acg"/>
     </logger>

  </run>

</beast>
